---
# tasks file for ansible-role-slurm

- name: Add all the slurm hosts to /etc/hosts
  block:

    - name: Add slurm master to /etc/hosts
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker_begin: "BEGIN slurm master host"
        marker_end: "END slurm master host"
        block: |
          {{ hostvars[slurm_master_host]['ansible_default_ipv4']['address'] }}  {{ slurm_master_host }}

    - name: Add slurmdbd to /etc/hosts
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker_begin: "BEGIN slurm dbd host"
        marker_end: "END slurm dbd host"
        block: |
          {{ hostvars[slurm_dbd_host]['ansible_default_ipv4']['address'] }}  {{ slurm_dbd_host }}

    - name: Add all the worker nodes to /etc/hosts
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker_begin: "BEGIN slurm workers hosts"
        marker_end: "END slurm workers hosts"
        block: |
          {% for node in groups[slurm_workers_group]  %}
          {{ hostvars[node]['ansible_default_ipv4']['address'] }}  {{ node }}
          {% endfor %}

    - name: Add all the submit nodes to /etc/hosts
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker_begin: "BEGIN slurm submit hosts"
        marker_end: "END slurm submit hosts"
        block: |
          {% for node in groups[slurm_submit_group]  %}
          {{ hostvars[node]['ansible_default_ipv4']['address'] }}  {{ node }}
          {% endfor %}

  when:
    - slurm_update_etc_hosts_file
    - not ansible_virtualization_type == "docker"       # we cannot modify /etc/hosts in container
    - not ansible_virtualization_type == "containerd"   # we cannot modify /etc/hosts in container

- name: Install OpenHPC repositories (RHEL7)
  ansible.builtin.yum:
    name: "{{ slurm_ohpc_repos_url['rhel7'] }}"
    state: installed
  when:
    - slurm_add_openhpc_repos
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "7"

- name: Install OpenHPC repositories (RHEL8)
  ansible.builtin.yum:
    name: "{{ slurm_ohpc_repos_url['rhel8'] }}"
    state: installed
  when:
    - slurm_add_openhpc_repos
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "8"

- name: Install common Slurm packages
  ansible.builtin.package:
    name: "{{ slurm_packages_common[ansible_os_family] }}"
    state: present

- name: Make a symlink /etc/slurm >> /etc/slurm-llnl on Debian based systems
  file:
    src: /etc/slurm-llnl
    dest: /etc/slurm
    owner: root
    group: root
    state: link
  when: ansible_os_family == "Debian"

- name: Ensure the Slurm spool directory exists
  ansible.builtin.file:
    path: /var/spool/slurm
    owner: slurm
    group: slurm
    mode: 0755
    state: directory

- name: Ensure the Slurm log directory exists
  ansible.builtin.file:
    path: /var/log/slurm
    owner: slurm
    group: slurm
    mode: 0755
    state: directory

- name: Generate a Munge key for the cluster in the slurm-master host
  ansible.builtin.command: "dd if=/dev/urandom of=/etc/munge/munge.key bs=1 count=1024"
  args:
    creates: /etc/munge/munge.key
  delegate_to: "{{ slurm_master_host }}"
  notify: restart munge service

- name: Set permissions for /etc/munge/munge.key in master
  ansible.builtin.file:
    path: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: 0400
  delegate_to: "{{ slurm_master_host }}"

- name: Retrieve Munge key from slurm-master host
  ansible.builtin.slurp:
    src: "/etc/munge/munge.key"
  register: _slurm_munge_key
  delegate_to: "{{ slurm_master_host }}"

- name: Write Munge key to submit hosts
  ansible.builtin.copy:
    content: "{{ _slurm_munge_key.content | b64decode }}"
    dest: "/etc/munge/munge.key"
    owner: munge
    group: munge
    mode: 0400
  when: "slurm_submit_group in group_names"
  notify: restart munge service

- name: Write Munge key to compute nodes
  ansible.builtin.copy:
    content: "{{ _slurm_munge_key.content | b64decode }}"
    dest: "/etc/munge/munge.key"
    owner: munge
    group: munge
    mode: 0400
  when: "slurm_workers_group in group_names"
  notify: restart munge service

- name: Start and enable munge service
  ansible.builtin.service:
    name: munge
    state: started
    enabled: true

- name: Deploy /etc/slurm/slurm.conf
  ansible.builtin.template:
    src: slurm.conf.j2
    dest: /etc/slurm/slurm.conf
    owner: root
    group: root
    mode: 0644
  notify: restart slurm services

- name: Configure slurm accounting daemon
  ansible.builtin.include_tasks: slurmdbd.yml
  when: "slurm_dbd_host in inventory_hostname"

- name: Configure slurm master daemon
  ansible.builtin.include_tasks: slurm-master.yml
  when: "slurm_master_host in inventory_hostname"

- name: Configure slurm workers
  ansible.builtin.include_tasks: slurm-worker.yml
  when: "slurm_workers_group in group_names"
