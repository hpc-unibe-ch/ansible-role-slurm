---

- name: Install slurm accounting daemon and dependencies
  ansible.builtin.package:
    name: "{{ slurm_packages_slurmdbd[ansible_os_family] }}"
    state: present

- name: Make a symlink /var/log/slurm >> /var/log/slurm-llnl on Debian based systems
  file:
    src: /var/log/slurm-llnl
    dest: /var/log/slurm
    owner: root
    group: root
    state: link
  when: ansible_os_family == "Debian"

- name: Enable and start mariadb server
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: true

- name: Install dependencies for the ansible mysql modules | RedHat7
  ansible.builtin.yum:
    name: MySQL-python
    state: present
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "7"

- name: Install dependencies for the ansible mysql modules | RedHat8
  ansible.builtin.yum:
    name: python3-mysql
    state: present
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "8"

- name: Install dependencies for the ansible mysql modules | Debian/Ubuntu
  ansible.builtin.apt:
    name: python3-mysqldb
    state: present
  when: ansible_os_family == "Debian"

- name: Create mysql db for accounting
  community.mysql.mysql_db:
    name: "{{ slurm_slurmdbd_mysql_db_name }}"
    state: present

- name: Create mysql account for slurm accounting daemon
  community.mysql.mysql_user:
    name: "{{ slurm_slurmdbd_mysql_user }}"
    password: "{{ slurm_slurmdbd_mysql_password }}"
    priv: '{{ slurm_slurmdbd_mysql_db_name }}.*:ALL'
    state: present
  no_log: true

- name: Deploy slurm accounting config file
  ansible.builtin.template:
    src: "{{ slurmdbd_conf_custom_template | default('slurmdbd.conf.j2') }}"
    dest: /etc/slurm/slurmdbd.conf
    owner: root
    group: root
    mode: 0600
  when: not slurm_config_git_repo is defined
  notify: restart slurmdbd service

- name: Enable and start slurmdbd
  ansible.builtin.service:
    name: slurmdbd
    state: started
    enabled: true
  register: _slurmdbd_boot

- name: Wait 15secs to let slurmdbd boot if this is the first time it boots
  ansible.builtin.pause:
    seconds: 15
  when: _slurmdbd_boot.changed
  tags:
    - skip_ansible_lint

- name: Check if the cluster is registered in accounting db
  ansible.builtin.shell: |
    set -o pipefail
    sacctmgr list cluster --noheader --parsable | wc -l
  args:
    executable: /bin/bash
  register: _sacctmgr_output
  changed_when: false

# if previous command return 0 lines it's because no cluster is registered
# We assume that no other clusters are re
- name: Register the cluster in accounting db
  ansible.builtin.command: sacctmgr add cluster {{ slurm_cluster_name }} --immediate
  when: _sacctmgr_output.stdout == "0"
